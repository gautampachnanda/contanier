DROP TABLE IF EXISTS ADDRESS;
DROP TABLE IF EXISTS CREDENTIAL;
DROP TABLE IF EXISTS CREDENTIALS;
DROP TABLE IF EXISTS APP_USER;
DROP TABLE IF EXISTS billionaires;

CREATE TABLE APP_USER (
    USER_ID NUMERIC AUTO_INCREMENT PRIMARY KEY,
    FIRST_NAME VARCHAR(250) NOT NULL,
    LAST_NAME VARCHAR(250) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT SYSTIMESTAMP,
    UPDATED_AT TIMESTAMP NOT NULL DEFAULT SYSTIMESTAMP
);

CREATE TABLE CREDENTIAL (
    CREDENTIAL_ID NUMERIC AUTO_INCREMENT PRIMARY KEY,
    USER_NAME VARCHAR(250) NOT NULL,
    PASSWORD VARCHAR(250) NOT NULL,
    USER_ID NUMERIC NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT SYSTIMESTAMP,
    UPDATED_AT TIMESTAMP NOT NULL DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES APP_USER(USER_ID)
);

CREATE TABLE ADDRESS (
    ADDRESS_ID NUMERIC AUTO_INCREMENT PRIMARY KEY,
    LINE_ONE VARCHAR(250) NOT NULL,
    LINE_TWO VARCHAR(250) NOT NULL,
    LINE_THREE VARCHAR(250) NOT NULL,
    LINE_FOUR VARCHAR(250) NOT NULL,
    POST_CODE VARCHAR(250) NOT NULL,
    USER_ID NUMERIC NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL DEFAULT SYSTIMESTAMP,
    UPDATED_AT TIMESTAMP NOT NULL DEFAULT SYSTIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES APP_USER(USER_ID)
);


CREATE TABLE billionaires (
  id INT AUTO_INCREMENT  PRIMARY KEY,
  first_name VARCHAR(250) NOT NULL,
  last_name VARCHAR(250) NOT NULL,
  career VARCHAR(250) DEFAULT NULL
);



